$date
	Thu Mar 12 15:28:16 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module timer_test $end
$var wire 32 ! cycle [31:0] $end
$var wire 1 " TimerInterrupt $end
$var wire 1 # TimerAddress $end
$var reg 1 $ MemRead $end
$var reg 1 % MemWrite $end
$var reg 32 & address [31:0] $end
$var reg 1 ' clock $end
$var reg 32 ( data [31:0] $end
$var reg 1 ) reset $end
$scope module t $end
$var wire 1 * Acknowledge $end
$var wire 1 $ MemRead $end
$var wire 1 % MemWrite $end
$var wire 1 # TimerAddress $end
$var wire 1 + TimerRead $end
$var wire 1 , TimerWrite $end
$var wire 32 - address [31:0] $end
$var wire 32 . address_compare [31:0] $end
$var wire 32 / address_compare_2 [31:0] $end
$var wire 1 ' clock $end
$var wire 32 0 data [31:0] $end
$var wire 1 1 interrupt_reset $end
$var wire 1 ) reset $end
$var wire 1 2 interrupt_enable $end
$var wire 32 3 cycle [31:0] $end
$var wire 1 4 address_is_equal_2 $end
$var wire 1 5 address_is_equal $end
$var wire 1 " TimerInterrupt $end
$var wire 32 6 Q_interrupt [31:0] $end
$var wire 32 7 Q_cycle [31:0] $end
$var wire 32 8 D_cycle [31:0] $end
$scope module cycle_counter $end
$var wire 1 ' clk $end
$var wire 1 9 enable $end
$var wire 1 ) reset $end
$var wire 32 : d [31:0] $end
$var reg 32 ; q [31:0] $end
$upscope $end
$scope module increment $end
$var wire 3 < control [2:0] $end
$var wire 32 = inA [31:0] $end
$var wire 32 > inB [31:0] $end
$var wire 32 ? out [31:0] $end
$var wire 1 @ zero $end
$var wire 1 A negative $end
$upscope $end
$scope module interrupt_cycle $end
$var wire 1 ' clk $end
$var wire 32 B d [31:0] $end
$var wire 1 , enable $end
$var wire 1 ) reset $end
$var reg 32 C q [31:0] $end
$upscope $end
$scope module interrupt_line $end
$var wire 1 ' clk $end
$var wire 1 D d $end
$var wire 1 2 enable $end
$var wire 1 1 reset $end
$var reg 1 " q $end
$upscope $end
$scope module t1 $end
$var wire 1 + control $end
$var wire 32 E d [31:0] $end
$var wire 32 F o [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bz F
bx E
1D
bx C
b0 B
0A
x@
b0x ?
b1 >
bx =
b10 <
bx ;
b0x :
19
b0x 8
bx 7
bx 6
05
04
bz 3
x2
11
b0 0
b11111111111111110000000001101100 /
b11111111111111110000000000011100 .
b0 -
0,
0+
0*
1)
b0 (
0'
b0 &
0%
0$
0#
x"
bz !
$end
#5
1@
b0 8
b0 :
b0 ?
12
b0 6
b0 C
b0 7
b0 ;
b0 =
b0 E
0"
1'
#10
b0 !
b0 3
b0 F
1+
1#
01
0'
1$
15
b11111111111111110000000000011100 &
b11111111111111110000000000011100 -
0)
#15
1"
1'
#20
0'
#25
1'
#30
0'
#35
1'
#40
0'
#45
1'
#50
bz !
bz 3
bz F
1,
0+
0'
1%
0$
b110 (
b110 0
b110 B
#55
02
b110 6
b110 C
1'
#60
b0 !
b0 3
b0 F
0,
1+
0'
0%
1$
#65
1'
#70
0'
#75
1'
#80
0'
#85
1'
#90
0'
#95
1'
#100
bz !
bz 3
bz F
11
0+
1*
0'
1%
0$
05
14
b11111111111111110000000001101100 &
b11111111111111110000000001101100 -
#105
0"
1'
#110
0'
